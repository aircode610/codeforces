#include<bits/stdc++.h>

using namespace std;

#define int long long
#define hash adfasdfasf

const int M=1e6+10,MOD=9999991,p=557;
int pp[M],ipp[M],ph[M];
string s;

int pw(int a,int b) {
  if(b==0LL)return 1LL;
  int p=pw(a,b/2LL);
  if(b%2LL==0LL)
    return p*p %MOD;
  return p*p %MOD * a %MOD;
}
int modinv(int a) {
  return pw(a,MOD-2);
}
int hashSub(int l,int r) {
  return ((ph[r]-ph[l-1]+MOD)*ipp[l])%MOD;
  //s[l]*p^l+s[l+1]*p^(l+1)+...+s[r]*p^r;
}
int hash(string str){
  int ret = 0;
  for (int i = 0; i < str.size(); i++)
    (ret += str[i]*pp[i])%=MOD;
  return ret;
}
int32_t main()
{
  cin>>s;
  s='.'+s;
  pp[0]=1;
  for(int i=1;i<M;i++){
    (pp[i]=pp[i-1]*p)%=MOD;
    ipp[i]=modinv(pp[i]);
  }
  for(int i=1;i<s.size();i++)
    (ph[i]=ph[i-1]+s[i]*pp[i])%=MOD;

  string suf = "", pre = "", ans = "";
  for (int i = 1; i < s.size(); i++){
    pre += s[i];
    suf = s[s.size()-i] + suf;
    int hp = hash(pre);
    int hs = hash(suf);
    if (hp == hs){
      for (int j = 2; j < s.size()-i;j++){
	if (hashSub(j, j+i-1) == hp && i > ans.size())
	  ans = s.substr(j, i);
      }
    }
  }
  if (ans == "")
    cout << "Just a legend" << endl;
  else
    cout << ans << endl;
  return 0;
}

